def rate(request, user_id):
    seller = get_object_or_404(User, pk=request.user.id)
    select = request.GET.get('s')
    if select:
        rating =
    try:
        selected_rating_field = user.ratinginfo_set.get(pk=request.POST['field'])
    except (KeyError, RatingInfo.DoesNotExist):
        return render(request, 'marketplace/rate.html', {
            'user': seller,
            'error_message': "Try again.",
        })
    else:
        selected_rating_field.count +=1
        seller.num_transactions +=1
        selected_rating_field.save()
        seller.save()
    return HttpResponseRedirect(reverse('marketplace:user', args=(seller.id,)))



    Seller rating:<br>
    <!--{% for field in seller.ratinginfo_set.all %}
      {{field.count}} {{field.info_field}} votes<br>
    {% endfor %}
       display only if > 3 transactions -->
    <a href = "{% url 'marketplace:rate' user.pk %}">Rate this seller</a>
